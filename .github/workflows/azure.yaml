name: Terraform Pipeline Azure

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/azure/**'
      - '.github/workflows/azure.yaml'

env:
  TERRAFORM_VERSION: 1.13.1

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest]
    
    permissions:
      contents: read
      
    steps:        
    - name: Step 01 - Terraform Setup
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Step 02 - CheckOut GitHub Repo
      uses: actions/checkout@v4

    - name: Step 03 - Authenticate with Azure
      uses: azure/login@v2
      with:
        creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

    - name: Step 04 - Set Terraform Environment Variables
      run: |
        CLIENT_ID=$(echo '${{ secrets.ARM_CLIENT_ID }}' | jq -r '.clientId')
        CLIENT_SECRET=$(echo '${{ secrets.ARM_CLIENT_SECRET }}' | jq -r '.clientSecret')
        TENANT_ID=$(echo '${{ secrets.ARM_TENANT_ID }}' | jq -r '.tenantId')
        SUBSCRIPTION_ID=$(echo '${{ secrets.ARM_SUBSCRIPTION_ID }}' | jq -r '.subscriptionId')

        echo "ARM_CLIENT_ID=$CLIENT_ID" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=$CLIENT_SECRET" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=$TENANT_ID" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=$SUBSCRIPTION_ID" >> $GITHUB_ENV

    - name: Step 04 - Terraform Init
      run: terraform -chdir=./terraform/azure init

    - name: Step 05 - Terraform Validate
      run: terraform -chdir=./terraform/azure validate

    - name: Step 06 - Terraform Format Check
      run: terraform -chdir=./terraform/azure fmt -check -diff -recursive

    - name: Step 07 - Terraform Plan
      run: terraform -chdir=./terraform/azure plan -out=tfplan

    - name: Step 08 - Terraform Test
      run: terraform -chdir=./terraform/azure test -verbose

    - name: Step 09 - Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        framework: terraform
        output_format: cli
        output_file_path: console
        soft_fail: true
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Step 01 - Terraform Setup
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Step 02 - CheckOut GitHub Repo
      uses: actions/checkout@v4

    - name: Step 03 - Authenticate with Azure
      uses: azure/login@v2
      with:
        creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

    - name: Step 04 - Terraform Init
      run: terraform -chdir=./terraform/azure init

    - name: Step 05 - Terraform Plan
      run: terraform -chdir=./terraform/azure plan -out=tfplan

    - name: Step 06 - Terraform Apply
      run: terraform -chdir=./terraform/azure apply tfplan

    - name: Step 07 - Terraform Show
      run: terraform -chdir=./terraform/azure show